/* tslint:disable */
/* eslint-disable */
/**
 * Rick and Morty API
 * To API pozwala uzyskiwaÄ‡ informacje o bohaterach serialu Rick and Morty.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Character } from './Character';
import {
    CharacterFromJSON,
    CharacterFromJSONTyped,
    CharacterToJSON,
} from './Character';
import type { CharactersResponseInfo } from './CharactersResponseInfo';
import {
    CharactersResponseInfoFromJSON,
    CharactersResponseInfoFromJSONTyped,
    CharactersResponseInfoToJSON,
} from './CharactersResponseInfo';

/**
 * 
 * @export
 * @interface CharactersResponse
 */
export interface CharactersResponse {
    /**
     * 
     * @type {CharactersResponseInfo}
     * @memberof CharactersResponse
     */
    info?: CharactersResponseInfo;
    /**
     * Lista postaci
     * @type {Array<Character>}
     * @memberof CharactersResponse
     */
    results?: Array<Character>;
}

/**
 * Check if a given object implements the CharactersResponse interface.
 */
export function instanceOfCharactersResponse(value: object): value is CharactersResponse {
    return true;
}

export function CharactersResponseFromJSON(json: any): CharactersResponse {
    return CharactersResponseFromJSONTyped(json, false);
}

export function CharactersResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): CharactersResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'info': json['info'] == null ? undefined : CharactersResponseInfoFromJSON(json['info']),
        'results': json['results'] == null ? undefined : ((json['results'] as Array<any>).map(CharacterFromJSON)),
    };
}

export function CharactersResponseToJSON(value?: CharactersResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'info': CharactersResponseInfoToJSON(value['info']),
        'results': value['results'] == null ? undefined : ((value['results'] as Array<any>).map(CharacterToJSON)),
    };
}

